<?php

/**
 * @file drupalcons.module
 * Demo module for Session #FlyViews. Views and Page Manager (CTools) integration with the #FlyViews Source website.
 */

define('DRUPALCONS_DEFAULT_API_URL', 'http://sourcepoint-flyviews.loc/api/drupalcon');
define('DRUPALCONS_DEFAULT_DEBUG_MODE', 1);

/**
 * Implements hook_menu().
 */
function drupalcons_menu() {
  $items = array();
  $items['admin/config/services/drupalcons'] = array(
    'title' => 'DrupalCons API settings',
    'description' => t('Settings for DrupalCons API, eg. endpoint URL etc.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('drupalcons_admin_form'),
    'access arguments' => array('administer drupalcons'),
    'file' => 'drupalcons.admin.inc',
  );
  $items['drupalcons/api-test'] = array(
    'title' => 'DrupalCons API Test',
    'page callback' => 'drupalcons_api_test_page',
    'access arguments' => array('administer drupalcons'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function drupalcons_permission() {
  return array(
    'administer drupalcons' => array(
      'title' => t('Administer DrupalCons'),
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function drupalcons_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function drupalcons_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Page callback; API test page.
 */
function drupalcons_api_test_page() {
  $output_method = (module_exists('devel')) ? 'dpm' : 'var_dump';

  // Test the request, when we want to get a set of items.
  $request = new DrupalConsAPIRequest();
  $result = $request
    ->addArgument('year', 2005)
    ->addArgument('attendees', array('min' => 80, 'max' => 120))
    ->execute();

  $output_method($result);

  // Test the request when we want to get a certain item.
  $request = new DrupalConsAPIRequest();
  $result = $request
    ->getItem(7)
    ->execute();

  $output_method($result);

  return t('Testing...');
}

